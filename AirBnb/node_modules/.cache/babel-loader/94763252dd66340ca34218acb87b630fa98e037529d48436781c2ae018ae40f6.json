{"ast":null,"code":"var _jsxFileName = \"/Users/kpgirishbhai/Downloads/react-project/setupproject/src/components/Card.js\";\nimport React from \"react\";\nimport \"../style.css\";\n// import pic from \"../images/katie-zaferes.png\";\nimport star from \"../images/star.png\";\n\n/*\nChallenge: Build the Card component\nFor now, hard-code in the data (like \nthe rating, title, price, etc.)\n\nNotes:\n- Only render 1 instance (I already did this for you)\n- The star icon and photo (katie-zaferes.png) are in the images \n  folder for your use\n- Make sure to include:\n    - image\n    - star icon (star.png), rating, and review count\n    - title\n    - cost/person\n- The main purpose of this challenge is to show you where our limitations\n  currently are, so don't worry about the fact that you're hard-coding all\n  this data into the component.\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(props) {\n  let cardBadge;\n  if (props.openSpots) {\n    cardBadge = \"SOLD OUT\";\n  } else if (props.location === \"Online\") {\n    cardBadge = \"ONLINE\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card\",\n    children: [cardBadge && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-badge\",\n      children: cardBadge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.img,\n      className: \"katie-zaferes-pic\",\n      alt: \"frfd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: star,\n          className: \"star\",\n          alt: \"gfg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \" \", props.rating, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-country\",\n          children: [\"(\", props.reviewCount, \") \\u2022 \", props.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-price\",\n          children: [\"From $\", props.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), \" / person\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","star","jsxDEV","_jsxDEV","Card","props","cardBadge","openSpots","location","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","img","alt","rating","reviewCount","title","price","_c","$RefreshReg$"],"sources":["/Users/kpgirishbhai/Downloads/react-project/setupproject/src/components/Card.js"],"sourcesContent":["import React from \"react\";\nimport \"../style.css\";\n// import pic from \"../images/katie-zaferes.png\";\nimport star from \"../images/star.png\";\n\n/*\nChallenge: Build the Card component\nFor now, hard-code in the data (like \nthe rating, title, price, etc.)\n\nNotes:\n- Only render 1 instance (I already did this for you)\n- The star icon and photo (katie-zaferes.png) are in the images \n  folder for your use\n- Make sure to include:\n    - image\n    - star icon (star.png), rating, and review count\n    - title\n    - cost/person\n- The main purpose of this challenge is to show you where our limitations\n  currently are, so don't worry about the fact that you're hard-coding all\n  this data into the component.\n*/\n\nexport default function Card(props) {\n  let cardBadge;\n  if (props.openSpots) {\n    cardBadge = \"SOLD OUT\";\n  } else if (props.location === \"Online\") {\n    cardBadge = \"ONLINE\";\n  }\n\n  return (\n    <section className=\"card\">\n      {cardBadge && <div className=\"card-badge\">{cardBadge}</div>}\n      <img src={props.img} className=\"katie-zaferes-pic\" alt=\"frfd\" />\n      <div className=\"card-text\">\n        <p>\n          <img src={star} className=\"star\" alt=\"gfg\" /> {props.rating}{\" \"}\n          <span className=\"card-country\">\n            ({props.reviewCount}) â€¢ {props.location}\n          </span>\n        </p>\n        <p>{props.title}</p>\n        <p>\n          <span className=\"card-price\">From ${props.price}</span> / person\n        </p>\n      </div>\n    </section>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB;AACA,OAAOC,IAAI,MAAM,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA,SAAAC,MAAA,IAAAC,OAAA;AAmBA,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAClC,IAAIC,SAAS;EACb,IAAID,KAAK,CAACE,SAAS,EAAE;IACnBD,SAAS,GAAG,UAAU;EACxB,CAAC,MAAM,IAAID,KAAK,CAACG,QAAQ,KAAK,QAAQ,EAAE;IACtCF,SAAS,GAAG,QAAQ;EACtB;EAEA,oBACEH,OAAA;IAASM,SAAS,EAAC,MAAM;IAAAC,QAAA,GACtBJ,SAAS,iBAAIH,OAAA;MAAKM,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEJ;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC3DX,OAAA;MAAKY,GAAG,EAAEV,KAAK,CAACW,GAAI;MAACP,SAAS,EAAC,mBAAmB;MAACQ,GAAG,EAAC;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChEX,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBP,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAKY,GAAG,EAAEd,IAAK;UAACQ,SAAS,EAAC,MAAM;UAACQ,GAAG,EAAC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,KAAC,EAACT,KAAK,CAACa,MAAM,EAAE,GAAG,eAChEf,OAAA;UAAMM,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,GAC5B,EAACL,KAAK,CAACc,WAAW,EAAC,WAAI,EAACd,KAAK,CAACG,QAAQ;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL,eACJX,OAAA;QAAAO,QAAA,EAAIL,KAAK,CAACe;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACpBX,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAMM,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,QAAM,EAACL,KAAK,CAACgB,KAAK;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,aACzD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEd;AAACQ,EAAA,GA1BuBlB,IAAI;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}